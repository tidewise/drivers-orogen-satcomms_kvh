name "satcomms_kvh"
# Optionally declare the version number
# version "0.1"

# If new data types need to be defined, they have to be put in a separate C++
# header, and this header will be loaded here
import_types_from "satcomms_kvhTypes.hpp"

# Finally, it is pretty common that headers are directly loaded from an external
# library. In this case, the library must be first used (the name is the
# library's pkg-config name) and then the header can be used. Following Rock
# conventions, a common use-case would be:
#
# using_library "satcomms_kvh"
# import_types_from "satcomms_kvh/CustomType.hpp"
using_library "satcomms_kvh"
import_types_from "satcomms_kvh/SatcommsStatus.hpp"
import_types_from "satcomms_kvh/SatcommsStatusManager.hpp"

# If this project uses data types that are defined in other oroGen projects,
# these projects should be imported there as well.
import_types_from "std"
# import_types_from "base"

task_context "SatcommsStatusTask" do
    needs_configuration
    property "url", "/std/string"
    property "timeout_miliseconds", "/uint16_t"
    output_port "output", "/satcomms_kvh/SatcommsStatus"
    periodic 1.0
end
